# Generated by Django 3.1.7 on 2021-03-28 11:39

import barbook_app.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BarbookUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        default="email@email.com", max_length=254, unique=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("любитель", "любитель"),
                            ("профессионал", "профессионал"),
                        ],
                        default="любитель",
                        max_length=50,
                    ),
                ),
                (
                    "img",
                    models.ImageField(
                        default="img_source\\img\\default.jpg",
                        upload_to="img_source\\img",
                    ),
                ),
                ("name", models.CharField(default="Бармен", max_length=255)),
                ("second_name", models.CharField(default="Барменович", max_length=255)),
                ("username", models.CharField(max_length=30, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "BarbookUser",
            },
            managers=[
                ("objects", barbook_app.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(max_length=1000)),
                ("header", models.CharField(max_length=255)),
                ("img", models.ImageField(upload_to="")),
                ("date", models.DateField(auto_now=True)),
            ],
            options={
                "verbose_name": "Новость",
                "verbose_name_plural": "Новости",
                "db_table": "article",
            },
        ),
        migrations.CreateModel(
            name="BarTool",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "small_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\small_img"
                    ),
                ),
                ("description", models.TextField()),
                (
                    "img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\img"
                    ),
                ),
            ],
            options={
                "verbose_name": "Барная принадлежность",
                "verbose_name_plural": "Барные принадлежности",
                "db_table": "bar_tool",
            },
        ),
        migrations.CreateModel(
            name="ClassForCocktailTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("class_name", models.CharField(default="без класса", max_length=255)),
            ],
            options={
                "verbose_name": "Класс для тегов коктейля",
                "verbose_name_plural": "Классы для тегов коктейля",
                "db_table": "class_for_cocktail_tag",
            },
        ),
        migrations.CreateModel(
            name="ClassForIngredientTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("class_name", models.CharField(default="Любые", max_length=255)),
            ],
            options={
                "verbose_name": "Класс для тегов ингридиента",
                "verbose_name_plural": "Классы для тегов ингридиентов",
                "db_table": "class_for_ingredient_tag",
            },
        ),
        migrations.CreateModel(
            name="Cocktail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "small_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\small_img"
                    ),
                ),
                ("description", models.TextField()),
                (
                    "img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\img"
                    ),
                ),
                ("recipe_text", models.TextField(max_length=300)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "barbook_user_favourite_cocktail",
                    models.ManyToManyField(
                        blank=True,
                        db_table="barbook_user_favourite_cocktail",
                        related_name="favourite",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cocktail_like",
                    models.ManyToManyField(
                        db_table="cocktail_like",
                        related_name="likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Коктейль",
                "verbose_name_plural": "Коктейли",
                "db_table": "Cocktail",
            },
        ),
        migrations.CreateModel(
            name="Contest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("img", models.ImageField(upload_to="")),
                ("date", models.DateField()),
                ("info", models.TextField(max_length=255)),
                ("name", models.CharField(max_length=40)),
                ("url", models.URLField()),
            ],
            options={
                "verbose_name": "Конкурс",
                "verbose_name_plural": "Конкурсы",
                "db_table": "contest",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_text", models.TextField(max_length=300)),
                ("author_email", models.EmailField(max_length=254)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("still_relevant", models.BooleanField()),
            ],
            options={
                "verbose_name": "Сообщение поддержке",
                "verbose_name_plural": "Сообщения поддержке",
                "db_table": "help_message",
            },
        ),
        migrations.CreateModel(
            name="TagForIngredient",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tag_name",
                    models.CharField(default="Любые", max_length=255, unique=True),
                ),
                (
                    "class_name",
                    models.ForeignKey(
                        default="без класса",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="barbook_app.classforingredienttag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег для ингридиента",
                "verbose_name_plural": "Теги для ингридиетов",
                "db_table": "tag_for_ingredient",
                "unique_together": {("tag_name", "class_name")},
            },
        ),
        migrations.CreateModel(
            name="TagForCocktail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tag_name",
                    models.CharField(default="Любые", max_length=255, unique=True),
                ),
                (
                    "class_name",
                    models.ForeignKey(
                        default="без класса",
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="classes",
                        to="barbook_app.classforcocktailtag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег для коктейлей",
                "verbose_name_plural": "Теги для коктелей",
                "db_table": "tag_for_cocktail",
                "unique_together": {("tag_name", "class_name")},
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "small_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\small_img"
                    ),
                ),
                ("description", models.TextField()),
                (
                    "img",
                    models.ImageField(
                        blank=True, null=True, upload_to="img_source\\img"
                    ),
                ),
                (
                    "measure",
                    models.CharField(
                        choices=[("мл", "мл"), ("г", "г")], default="г", max_length=50
                    ),
                ),
                (
                    "ingredient_tag",
                    models.ManyToManyField(
                        blank=True,
                        db_table="ingredient_tag",
                        related_name="tag",
                        to="barbook_app.TagForIngredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингридиент",
                "verbose_name_plural": "Ингридиенты",
                "db_table": "Ingredient",
            },
        ),
        migrations.CreateModel(
            name="CommentOnCocktail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(max_length=250)),
                ("date", models.DateField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cocktail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="barbook_app.cocktail",
                    ),
                ),
            ],
            options={
                "db_table": "comment_on_cocktail",
            },
        ),
        migrations.CreateModel(
            name="CocktailTool",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                (
                    "cocktail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="barbook_app.cocktail",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="barbook_app.bartool",
                    ),
                ),
            ],
            options={
                "db_table": "cocktail_tool",
            },
        ),
        migrations.CreateModel(
            name="CocktailRecipe",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                (
                    "cocktail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cocktail",
                        to="barbook_app.cocktail",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredient",
                        to="barbook_app.ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт коктейля(1 ингридиент)",
                "db_table": "cocktail_recipe",
            },
        ),
        migrations.AddField(
            model_name="cocktail",
            name="cocktail_tag",
            field=models.ManyToManyField(
                blank=True, db_table="cocktail_tag", to="barbook_app.TagForCocktail"
            ),
        ),
        migrations.CreateModel(
            name="BarbookUserJobHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("place_name", models.CharField(max_length=255)),
                ("date_beginning", models.DateField()),
                ("date_ending", models.DateField(null=True)),
                ("still", models.BooleanField()),
                (
                    "job_role",
                    models.CharField(
                        choices=[
                            ("PR", "PR"),
                            ("Администратор", "Администратор"),
                            ("Амбассадор бренда", "Амбассадор бренда"),
                            ("Бармен", "Бармен"),
                            ("Бренд менеджер", "Бренд менеджер"),
                            ("Владелец", "Владелец"),
                            ("Директор", "Директор"),
                            ("Менеджер", "Менеджер"),
                            ("Официант", "Официант"),
                            ("Помощник бармена", "Помощник бармена"),
                            ("Старший бармен", "Старший бармен"),
                            ("Хостесс", "Хостесс"),
                            ("Шеф-повар", "Шеф-повар"),
                        ],
                        default="Бармен",
                        max_length=255,
                    ),
                ),
                ("country", models.CharField(default="Страна", max_length=255)),
                ("city", models.CharField(default="Город", max_length=255)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "barbook_user_job_history",
            },
        ),
        migrations.CreateModel(
            name="AnswerOnComment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now=True)),
                (
                    "answer_author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "answer_on_answer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="barbook_app.answeroncomment",
                    ),
                ),
                (
                    "main_comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="barbook_app.commentoncocktail",
                    ),
                ),
            ],
            options={
                "db_table": "answer_on_comment",
            },
        ),
    ]
